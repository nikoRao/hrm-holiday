<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script_include">
  <sys_script_include action="INSERT_OR_UPDATE">
    <access/>
    <active>true</active>
    <api_name>SyncDingdingAttendance</api_name>
    <caller_access/>
    <client_callable>false</client_callable>
    <description>同步钉钉考勤</description>
    <name>SyncDingdingAttendance</name>
    <script>var SyncDingdingAttendance = Class.create();
SyncDingdingAttendance.prototype =  {
  // 同步今日某用户考勤
  synchronousAttendanceByUserPhone: function(mobile, userId, work_date) {
    var tokenRequest = new RESTMessage();
    tokenRequest.setEndpoint('https://api.dingtalk.com/v1.0/oauth2/accessToken');
    tokenRequest.setHttpMethod('POST');
    tokenRequest.setRequestBody(new Json().encode({
      appKey: 'dingzglqzaw9blakgnhx',
      appSecret: '-1XLTTWILMtTrUjD1v0WqqcwxhknOjfjYOvLzBKkTRlk7LM2pVilRsdF_-z0TrY6'
    }));
    tokenRequest.setRequestHeader('Content-type', 'application/json');
    tokenRequest.setRequestHeader('Accept', 'application/json;charset=UTF-8');
    var res = tokenRequest.execute();
    var accessToken = new Json().decode(res.getBody()).accessToken;
    gs.print(accessToken);

    // 获取钉钉用户id
    var useridUrl = 'https://oapi.dingtalk.com/topapi/v2/user/getbymobile';
    var mobile_body = {
      mobile: mobile
    };
    var userIdRequest = new RESTMessage();
    userIdRequest.setEndpoint(useridUrl);
    userIdRequest.setHttpMethod('POST');
    gs.print('mobile:' + mobile)
    userIdRequest.setRequestBody(new Json().encode(mobile_body));
    userIdRequest.setQueryParameter('access_token', accessToken);
    userIdRequest.setRequestHeader('Content-type', 'application/json');
    userIdRequest.setRequestHeader('Accept', 'application/json;charset=UTF-8');
    var user_id_res = userIdRequest.execute();
    gs.print('body:' + user_id_res.getBody())
    var user_id_body = new Json().decode(user_id_res.getBody());
    if (user_id_body.errcode == 0 &amp;&amp; user_id_body.errmsg == 'ok') {
      var user_id = user_id_body.result.userid;
      gs.print(user_id);

      // 获取考勤
      var attendanceRequest = new RESTMessage();
      attendanceRequest.setEndpoint('https://oapi.dingtalk.com/topapi/attendance/getupdatedata');
      attendanceRequest.setHttpMethod('POST');
      attendanceRequest.setRequestBody(new Json().encode({
        userid: user_id,
        work_date: work_date
      }));
      attendanceRequest.setRequestHeader('Content-type', 'application/json');
      attendanceRequest.setRequestHeader('Accept', 'application/json;charset=UTF-8');
      attendanceRequest.setQueryParameter('access_token', accessToken);
      var attendanceRes = attendanceRequest.execute();
      // 考勤结果
      var attendance_body = new Json().decode(attendanceRes.getBody());
      if (attendance_body.errcode == 0 &amp;&amp; attendance_body.errmsg == 'ok') {
        var resultList = attendance_body.result.attendance_result_list;
        // 插入考勤结果
        resultList.forEach(item =&gt; {
          var vacationGr = new GlideRecord('x_yunji_check_info');
          vacationGr.addQuery('user', '' + userId);
          vacationGr.addQuery('plan_check_time', item.plan_check_time);
          vacationGr.query();
          if (vacationGr.resultSet.total == 0) {
            var vacationGr1 = new GlideRecord('x_yunji_check_info');
            vacationGr1.setValue('source_type', item.source_type);
            vacationGr1.setValue('time_result', item.time_result);
            vacationGr1.setValue('user_check_time', item.user_check_time);
            vacationGr1.setValue('plan_check_time', item.plan_check_time);
            vacationGr1.setValue('check_type', item.check_type);
            var lateEarlyTime = 0;
            if ("Early" == item.time_result) {
              lateEarlyTime = lateEarlyTime + this.getTimesBetween(String(item.user_check_time), String(item.plan_check_time))
            }
            if ("Late" == item.time_result) {
              lateEarlyTime = lateEarlyTime + this.getTimesBetween(String(item.plan_check_time), String(item.user_check_time))
            }
            vacationGr1.setValue('late_early_time', lateEarlyTime);
            gs.print("item: " + item);
            vacationGr1.setValue('user', '' + userId);
            vacationGr1.insert();
          }
        });
      }
    }
  },

  getTimesBetween: function(startDate, enDate) {
    gs.print("########### startDate:" + startDate)
    gs.print("########### enDate:" + enDate)
    startDate = startDate.substring(0, 19);
    gs.print("###666startDate:" + (typeof startDate))
    startDate = startDate.replace(/-/g, '/');
    var startTimeTamp = new Date(startDate).getTime();
    //var startTimeTamp = new Date(startDate.substring(0, 19).replace(/-/g, '/')).getTime();

    enDate = enDate.substring(0, 19);
    gs.print("###666startDate:" + (typeof enDate))
    enDate = enDate.replace(/-/g, '/');
    var endTimeTamp = new Date(enDate).getTime();
    //  var endTimeTamp = new Date(enDate.substring(0, 19).replace(/-/g, '/')).getTime();
    var seconds = Math.floor((endTimeTamp - startTimeTamp) / 1000);
    var minutes = Math.ceil(seconds / 60);
    return minutes;
  },
  type: 'SyncDingdingAttendance'
}</script>
    <sys_class_name>sys_script_include</sys_class_name>
    <sys_created_by>admin</sys_created_by>
    <sys_created_on>2022-07-22 08:57:18</sys_created_on>
    <sys_effective/>
    <sys_id>29b048654788408fbd31a2f806798e89</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>09fbd6acc21d4dd8b5cc4bc8d396f6a5</sys_scope>
    <sys_update_name/>
    <sys_updated_by>admin</sys_updated_by>
    <sys_updated_on>2022-08-02 14:33:07</sys_updated_on>
  </sys_script_include>
</record_update>
